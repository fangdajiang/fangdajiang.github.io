---
layout: post
title:  【硬广】TeamCode 和 TIN
date:   2021-10-09
categories: cloud native
---
> TIN: Try It Now, 快速实现从代码到应用服务的 TeamCode 产品。

先讲一个小故事。

假如你喜欢或稍微了解一些乡村音乐或摇滚乐，一定知道在上世纪的六七十年代，欧美先后诞生了一个又一个声名大噪的乐队和歌手，从 Beatles 到 Queen，从猫王到 Eric Clapton，为全世界带来了数不胜数脍炙人口的作品。他们的歌曲是如此受欢迎，以至于不少乐队常年奔波于各个城市之间，四处巡回演出。

然而，巡回演出不仅考验体力，也考精力。舟车劳苦之外，还需要处理各项繁琐的事务：行程规划，饮食，酒店，车辆管理，服装/乐器的打包及运输，场地检视，当地媒体约谈，粉丝见面，人身安全保险事项，不一而足，假如涉及不同乐队联合演出或突发/临时计划，繁杂的事务恐怕要翻倍。当然，经纪公司要负责其中相当一部分事务，不过，客观地说，这些事务有的他们擅长，有的却不是。

我曾经读过一篇报道说(注1)，当时出现了一类特别的服务公司，他们专门服务于多地巡回演出的乐队，宣称可以包揽除唱歌之外的所有事务，他们的口号是：“你们只管唱歌，剩下的交给我们！”从而消除演出前前后后可能长达数月的后顾之忧。我想，只要价格不是特别昂贵，即便是乐队的经纪公司，恐怕也愿意花钱买省事，好专心处理出版发行那些他们最擅长的工作吧。

我知道，对于一些提供软件/互联网服务的公司而言，有时也有着类似的感受。一个软件产品的推出——只谈技术方面——除了程序员完成业务逻辑的开发外，还需要完成很多开发以外的事务才能上线。以电商后端微服务为例，账户，支付，订单，物流，仓储等等开发完后，还需要打包并部署，而这些微服务所依赖的软件也需要同样的处理。另外还有日志，监控，报警，扩缩容，服务器购置/设置等等。假如系统的开发涉及一个团队，那么技术/项目经理还需要处理开发环境一致性的问题，测试环境的可靠性问题，各环境的配置问题，数据安全性问题。而所有这些事务，往往会随着人员变动、版本升级、bug 修复一次又一次地在这里或那里重新来过。

个人开发者会好很多：把一个项目开发好后往 Gitee/GitHub 这类平台上一扔，只要不涉及分享使用，基本就告一个段落。但是，假如有人对你的项目有兴趣，想体验一下，问题就出现了(注2)：怎么跑起来呢？或者说，怎么能不花什么功夫，又不花什么钱让我的项目跑起来给他看看呢？我笔记本上正运行着的这个项目不需要再花什么功夫，也不用花钱，能在哪里跑起来让其他人玩玩呢？

嗯？还是得买服务器配置服务器配置项目环境部署项目安装依赖？Come on, 在我自己的机器上就花了好些功夫，而我是一个程序员，又不是程序，最不擅长的就是做这类重复而又繁琐的工作好么？

看上去有没有点眼熟？能不能感受到程序员们处理编写业务逻辑以外事务时的焦灼？嗯，六七十年代的乐队和经纪公司当时也挺皱眉的。而且，聊了这么多，基本没谈花费的问题，相对于服务器软硬件的开销而言，处理繁杂事务的人和时间才是最贵的。

TeamCode 就是这样一个致力于处理繁琐事务的公司，尝试囊括业务开发以外的所有软硬件事务。GitHub 上有个不错的项目，来来来，TIN 一下就能跑起来(注3)；开发环境的配置和运维事务实在让我头大，来来来。。。额，稍等，这个产品还没好，但快了。

凭借云原生的威力，TeamCode 得以站在巨人的肩膀上向陷入泥沼的你递来一根配备现代化装置的支撑杆，认真地说：“你只管开发业务，剩下的交给我们。”

> * 注1: 我只是读过这篇报道，没能记住服务公司的名称，重新再回头找时已成桃花源。假如哪位知道，请告知，谢过~
* 注2: 有不少公司已推出能运行 GitHub 项目的产品，GitPod, Coder 等等，都相当不错
* 注3: 目前 TIN 对项目类型的支持还比较有限
