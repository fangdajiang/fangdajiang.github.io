---
layout: post
title:  "下一代软件开发模式（可能）是啥样的？"
date:   2021-10-29
categories: cloud native, 硬广
---
> DCS: Development Compute Service, 可共享的开发环境。

记得 Google 刚推出 Picasa Web 相片服务时我开心坏了。我用电脑上的 Picasa 程序整理了很多喜欢的图片同步了上去。时至今日已经10多年过去了，可再回头浏览时还经常会被当时的一些图片所触动。当时所有图片我都是从电脑硬盘传上去的，毕竟，只要家里没有 NAS，单个硬盘就不那么可靠，相片日积月累，几个硬盘相互备份累得慌。话虽如此，当苹果刚推出 iCloud 相片服务时，我心里开始嘀咕：我手机里的相片放你服务器里干嘛？有那个必要么？只要做好 iTunes 备份就基本不用担心可靠性问题好吗？毕竟。。。放服务器也太容易带来隐私问题了（，至少）。换现在的表达方式就是：“直接放手机里不香么？”

然而，我显然没看清这个服务的价值。虽然备份相片不算麻烦，可时间长了也挺烦的。另外，隐私问题基本可以依赖技术和法律做到一旦出问题，违法者需要承担相当高的消除或解释证据链成本，而 iCloud 照片服务也并不是仅作存储，还有好些其他贴心服务，比如，能通过描述来搜图，比如，能自动整理相片并在某个时刻勾起那时的美好回忆。我当然没在为 iCloud 打广告，但这的确佐证了一件事：云端服务将越来越多地进入我们的生活。或许有一天，就像水和电那样让我们几乎忘记了它们的存在。

十多年前 Dropbox 服务刚推出时，我可劲地薅了近10G免费空间。直到今天，它依然常驻我的电脑后台。我把我最重要的文件全部放了进去，因为这样的话，即便电脑突然遭遇不测（想起 Google 刚推出 Chromebook 时的广告来），我也不用慌，买了新电脑后，Dropbox 可以把那些文件全部恢复出来。什么？Mac 有 Time Machine? 噢，这个我也一直在用，挺好的，只是不那么依赖。可以说，Dropbox 是我所使用的云服务中最重要的一个。

作为一名软件开发人员，我不时会想：未来我会以怎样一种方式进行软件开发。性能优良的硬件？必须的，M1 Pro/Max, M2, M3... 此外，顺手的 IDE，高带宽，低延时。。。假如想得极端一点，这些软硬件都达到了极致，这时我就拥有了理想的软件开发方式了吗？

还缺啥？

除非只开发单人就能全权掌管的项目，否则我将来的软件开发一定还是和许多人一起进行。要么别人在我开发的代码上修正错误增强功能，要么我也这样帮助他人，所以，将来的开发一定离不开“协作”。现在的云端协作开发服务不少，大多能够做到多人同时编辑同一份文档，但在我眼里，这似乎还算不上“协作”，或许只能算是把 Google Docs 这类产品 IDE 化了而已。多年前 Google 曾推出产品 Wave 尝试改变大家写邮件的方式，后来也匆匆收场，但其中用到的协作技术令我印象深刻 。

所以，到底还缺啥？

我认为最缺的是“环境”，包括开发和运行环境。虽然我们可以使用云端协作功能实时看到代码的变动，对方也能轻易地拿到我机器上运行的代码，然而，要让他人调试/运行我开发的功能，或对方在我的机器里复现他遇到的问题，成本还是相当高，甚至不可能。

TeamCode 正在努力消除这个“不可能”。我们将会做到：你开发的项目，不仅能在他人机器上一键运行，还能在对方修改后，在你的机器上立竿见影。

DCS 这个产品正是为此而生。她不仅能通过极大地降低乃至消除环境差异来降低时间成本，还能在整个软件开发的生命周期，包括测试，打包，部署上也做到时间和资金上的低成本。

谁不想既能省钱，还能省事儿呢。

未来理想的软件开发方式会不会是这样的呢？我不知道。会不会和 DCS 很像呢？我认为很有可能。这的确是我希望的开发方式，从而消除环境配置上的繁琐，依赖管理上的愁烦，CI/CD上的门槛，甚至还能极大减少沟通上的误解和争吵。

没准有一天，也能像现在的许多云端服务那样，越来越走进我们的生活，而“存在感”却越来越少。

或许，到时至少有一句话将去无影踪：IT WORKS ON MY MACHINE!
